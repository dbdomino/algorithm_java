package com.ex.baekjoon.배수와약수;

import java.util.Scanner;

public class ex11653 {
    // 정수 N이 주어졌을 때, 소인수분해하는 프로그램을 작성하시오.
    // 소인수분해 :  어떤 수를 가장 작은 소수인 인수로 분해하는 것이다.
    // 1보다 큰 자연수를 소인수들만의 곱으로 나타내는 것 또는 합성수를 소수의 곱으로 나타내는 방법을 말한다.
    // 소인수분해를 일의적으로 결정하는 공식은 아직 발견되지 않았다. 현대 암호 처리에서 소인수분해의 어려움은 중요한 기준이 된다.

    // 이 소인수분해가 중요한 이유는 현대 암호학의 가장 기본 토대가 되는 부분이기 때문이다.
    // 앞으로 여러분이 암호학에 관심을 갖게 된다면 배우겠지만, 아직까지 소인수분해를 일률적으로 구할 수 있는 공식을 발견하지 못했기 때문이다.
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);

        int n = in.nextInt();
        // 어떤 n이 두 개이상 곱셈(인수)으로 나타낼 수 있을 때 인수 중 한 개 이상은 반드시 √N보다 작거나 같다는 것이다.
        // 때문에 반복을 줄이기 위해 제곱근 까지만 구해서 나눠 떨어지는 지 판단 해도 된다.
        for (int i = 2; i <= Math.sqrt(n); i++) {	// 또는 i * i <= N
            while (n % i == 0) { // 0으로 나눠 떨어지는 지 판단, 떨어지면 이로 나눠서 계속 비교하여 소인수로 출력시킴
                System.out.println(i);
                n /= i;
            }
        }
        if (n != 1) {
            System.out.println(n);
        }
    }
}
