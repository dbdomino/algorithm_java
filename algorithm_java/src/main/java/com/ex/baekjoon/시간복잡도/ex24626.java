package com.ex.baekjoon.시간복잡도;

public class ex24626 {
    public static void main(String[] args) {
/*
 //MenOfPassion 알고리즘

  MenOfPassion(A[], n) { //n이 입력받은 입력 크기이고
      i = ⌊n / 2⌋; // 입력 크기를 반을 나눈 것은 i변수에 저장한 후
      return A[i]; # 코드1 // A[i] 번째의 값을 반환한다.
  }

  둘째 줄에 코드1의 수행 횟수를 다항식으로 나타내었을 때, 최고차항의 차수를 출력한다.
  빅오표기법의 시간복잡도의 계산자체가 최고차항의 차수만 남기고 버리니까(?) 아마 이걸 말하는게 아닌가? 싶다!
  //  인자가 특정한 값이나 무한대로 향할 때 함수의 극한적인 동작을 설명하는 수학적인 표기법이 빅오 표기법(너무 수학적이라서 문젠데)
  단, 다항식으로 나타낼 수 없거나 최고차항의 차수가 3보다 크면 4를 출력한다.

  코드1의 수행 횟수??        최고차항의 차수를 출력??
  n이 머가 들어온다고해도...  A[i] 즉 A[i] 번째의 값을 반환한다. 문제가 너무 어렵다.... 왜 이따군지
  n이 머가되든 계산은 한번이면 끝나는 것으로 보인다.
  그러므로 수행 횟수는 1
  수행횟수를 다항식으로 나타내더라도... O(1) 이라서 0이다.

 */
        System.out.println(1);
        System.out.println(0);
    }
}
